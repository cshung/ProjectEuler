namespace Euler
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    internal static partial class Program
    {
        //
        // The set of strings with no 3 consecutive digits has sum greater than 9 can be 
        // recognized by a finite automata
        // counting the number of strings of a certain length generated by a finite automata
        // can be done using dynamic programming
        //
        // say node A -> node B, then the number of strings generated by the automata ending 
        // at node B with length L + 1 is the number of string ending at node A with length L.
        // 
        public static void Problem164()
        {
            var currentCount = new long[10, 10];
            var newCount = new long[10, 10];
            for (int i = 0; i < 10; i++)
            {
                for (int j = 0; j < 10; j++)
                {
                    if (i + j < 10)
                    {
                        currentCount[i, j] = (i == 0) ? 0 : 1;
                    }
                }
            }
            for (int k = 0; k < 18; k++)
            {
                for (int i = 0; i < 10; i++)
                {
                    for (int j = 0; j < 10; j++)
                    {
                        if (i + j < 10)
                        {
                            long currentCountValue = currentCount[i, j];
                            if (currentCountValue > 0)
                            {
                                // Consider a next move
                                for (int n = 0; n < 10; n++)
                                {
                                    if (i + j + n < 10) // The move is valid
                                    {
                                        newCount[j, n] += currentCountValue;
                                    }
                                }
                            }
                        }
                    }
                }
                currentCount = newCount;
                newCount = new long[10, 10];
            }
            long allCount = 0;
            for (int i = 0; i < 10; i++)
            {
                for (int j = 0; j < 10; j++)
                {
                    allCount += currentCount[i, j];
                }
            }
            Console.WriteLine(allCount);
        }
    }
}